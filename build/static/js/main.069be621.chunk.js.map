{"version":3,"sources":["component/content/fragment/HomeFragment.tsx","component/content/fragment/NetdataFragment.tsx","component/content/ContentMain.tsx","component/layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paragraph","Typography","Title","Link","Home","href","Netdata","Main","props","selectedNav","Header","Layout","Content","AppLayout","useState","nav","setNav","className","theme","mode","defaultSelectedKeys","onSelect","event","selected","selectedKeys","console","log","Item","onClick","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGQA,EAA2BC,IAA3BD,UAAWE,EAAgBD,IAAhBC,MAAOC,EAASF,IAATE,KAeXC,MAbf,WACE,OAAO,+BACH,mBAAGC,KAAK,8BAAR,+BACA,eAAC,IAAD,WACE,cAACH,EAAD,kEACA,eAACF,EAAD,2CACW,cAACG,EAAD,CAAME,KAAK,wBAAX,4CADX,gCAEW,cAACF,EAAD,CAAME,KAAK,wBAAX,sDCJJC,MANf,WACE,OAAO,6BACH,mBAAGD,KAAK,iCAAR,qCCSSE,MALf,SAAeC,GAEb,MAAwB,SADJA,EAAMC,YACQ,cAAC,EAAD,IAAW,cAAC,EAAD,KCLvCC,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAqCDC,MAnCf,WAAuB,IAAD,EACEC,mBAAiB,QADnB,mBACbC,EADa,KACRC,EADQ,KAcpB,OACE,sBAAKC,UAAU,SAAf,UACE,eAAC,IAAD,CAAQA,UAAU,SAAlB,UACE,eAACP,EAAD,CAAQO,UAAU,SAAlB,UACE,qBAAKA,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAACL,GAAMM,SAXlD,SAACC,GACtB,IAAMC,EAAWD,EAAME,cAAgB,CAAC,QACxCC,QAAQC,IAAI,cAAeH,GAC3BP,EAAOO,EAAS,KAQV,UACE,cAAC,IAAKI,KAAN,oBAAe,QACf,cAAC,IAAKA,KAAN,0BAAe,cAGnB,cAACf,EAAD,UACE,cAAC,EAAD,CAAMH,YAAcM,SAGxB,cAAC,IAAD,IAEA,cAAC,IAAD,CAAQa,QA3B2C,SAACN,GACtDG,QAAQC,IAAIJ,GACZO,MAAM,QAyBJ,+BC1BSC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.069be621.chunk.js","sourcesContent":["import React from 'react'\nimport { Typography } from 'antd'\n\nconst { Paragraph, Title, Link } = Typography\n\nfunction Home () {\n  return <h3>\n      <a href=\"https://home.jeonghan.wo.tc\">home 링크</a>\n      <Typography>\n        <Title> 타이포 그래피 제목</Title>\n        <Paragraph>\n          로렘 입숨~~~ <Link href=\"https://www.naver.com\">네이버링크</Link>\n          로렘 입숨~~~ <Link href=\"https://www.naver.com\">네이버링크</Link>\n        </Paragraph>\n      </Typography>\n  </h3>\n}\n\nexport default Home\n","import React from 'react'\n\nfunction Netdata () {\n  return <h3>\n      <a href=\"https://netdata.jeonghan.wo.tc\">netdata 링크</a>\n  </h3>\n}\n\nexport default Netdata\n","import React from 'react'\nimport Home from './fragment/HomeFragment'\nimport Netdata from './fragment/NetdataFragment'\n\ninterface MainProps {\n  selectedNav : string\n}\n\nfunction Main (props : MainProps) {\n  const selectedNav = props.selectedNav\n  return (selectedNav === 'home') ? <Home /> : <Netdata />\n}\n\nexport default Main\n","import React, { useState } from 'react'\nimport { Button, Divider, Layout, Menu } from 'antd'\nimport type { SelectInfo } from 'rc-menu/lib/interface'\nimport Main from './content/ContentMain'\n\nconst { Header, Content } = Layout\n\nfunction AppLayout () {\n  const [nav, setNav] = useState<string>('home')\n\n  const alerting: React.MouseEventHandler<HTMLElement> = (event) => {\n    console.log(event)\n    alert('hi!')\n  }\n\n  const selectFunction = (event: SelectInfo) => {\n    const selected = event.selectedKeys || ['home']\n    console.log('occur event', selected)\n    setNav(selected[0] as string)\n  }\n\n  return (\n    <div className=\"layout\">\n      <Layout className=\"layout\">\n        <Header className=\"header\" >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[nav]} onSelect={selectFunction}>\n            <Menu.Item key=\"home\">홈</Menu.Item>\n            <Menu.Item key=\"menu\">메뉴</Menu.Item>\n          </Menu>\n        </Header>\n        <Content>\n          <Main selectedNav={ nav } />\n        </Content>\n      </Layout>\n      <Divider />\n\n      <Button onClick={alerting}>버튼!</Button>\n    </div>\n  )\n}\n\nexport default AppLayout\n","import React from 'react'\n// import logo from './logo.svg'\nimport './App.css'\nimport AppLayout from './component/layout'\n\nfunction App () {\n  return (\n    <AppLayout />\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}